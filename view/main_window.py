# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow2.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QInputDialog, QDialogButtonBox, QWidget, QButtonGroup, QVBoxLayout, QRadioButton, QDialog, \
    QLabel
from PyQt5.QtCore import Qt
from model.parts import DeckRadioButton, Card
from .dialog import SelectionDialog


class UiMainWindow(object):
    def setup_ui(self, main_window, controller):
        self.controller = controller
        self.controller.on_startup()

        main_window.setObjectName("Learnables")
        main_window.setFixedSize(480, 640)

        self.centralwidget = QtWidgets.QWidget(main_window)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setObjectName("central_widget")

        self.mainWidget = QtWidgets.QStackedWidget(self.centralwidget)  # Vertical Stacked Widget
        self.mainWidget.setGeometry(QtCore.QRect(10, 10, 460, 640))
        self.mainWidget.setObjectName("main_widget")

        # Start Page
        self.startPage = QtWidgets.QWidget()
        self.startPage.setObjectName("start_page")

        self.startVLayout = QtWidgets.QVBoxLayout(self.startPage)
        self.startVLayout.setSpacing(0)
        self.startVLayout.setObjectName("start_vlayout")

        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.startVLayout.addItem(spacerItem)

        self.btn_cards = QtWidgets.QPushButton(self.startPage)
        self.btn_cards.clicked.connect(self.open_cards)
        self.btn_cards.setObjectName("button_cards")

        self.startVLayout.addWidget(self.btn_cards)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.startVLayout.addItem(spacerItem1)

        self.btn_decks = QtWidgets.QPushButton(self.startPage)
        self.btn_decks.clicked.connect(self.open_decks)
        self.btn_decks.setObjectName("button_decks")
        self.startVLayout.addWidget(self.btn_decks)

        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.startVLayout.addItem(spacerItem2)

        self.btn_learn = QtWidgets.QPushButton(self.startPage)
        self.btn_learn.clicked.connect(self.open_learn)
        self.btn_learn.setObjectName("button_learn")
        self.startVLayout.addWidget(self.btn_learn)

        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.startVLayout.addItem(spacerItem3)

        self.btn_start_settings = QtWidgets.QPushButton(self.startPage)
        self.btn_start_settings.setObjectName("btn_start_settings")
        self.btn_start_settings.clicked.connect(self.open_settings)
        self.startVLayout.addWidget(self.btn_start_settings)

        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.startVLayout.addItem(spacerItem4)

        self.mainWidget.addWidget(self.startPage)

        # Cards Page
        # TODO: wenn neue karten hinzugef√ºgt werden, sind sie innerhalb von anderen karten
        self.cardsPage = QtWidgets.QWidget()

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cardsPage.sizePolicy().hasHeightForWidth())
        self.cardsPage.setSizePolicy(sizePolicy)

        self.cardsPage.setObjectName("cards_page")
        self.cardsVLayout = QtWidgets.QWidget(self.cardsPage)
        self.cardsVLayout.setGeometry(QtCore.QRect(0, 0, 460, 600))
        self.cardsVLayout.setObjectName("cards_vlayout")

        self.cardsContentLayout = QtWidgets.QVBoxLayout(self.cardsVLayout)
        self.cardsContentLayout.setContentsMargins(0, 0, 0, 0)
        self.cardsContentLayout.setObjectName("cards_content_layout")

        self.cardsScrollArea = QtWidgets.QScrollArea(self.cardsVLayout)
        self.cardsScrollArea.setWidgetResizable(True)
        self.cardsScrollArea.setObjectName("cards_scroll_area")

        self.cardsContent = QtWidgets.QWidget()
        self.cardsContent.setGeometry(QtCore.QRect(0, 0, 460, 600))
        self.cardsContent.setObjectName("cards_content")
        self.cardsScrollArea.setWidget(self.cardsContent)

        self.cardsScrollArea.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.cardsScrollArea.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.cardsContentLayout.addWidget(self.cardsScrollArea)

        self.btn_add_card = QtWidgets.QPushButton(self.cardsVLayout)
        self.btn_add_card.clicked.connect(self.add_card)
        self.btn_add_card.setObjectName("btn_add_card")
        self.cardsContentLayout.addWidget(self.btn_add_card)

        self.cards_menu = QtWidgets.QHBoxLayout()
        self.cards_menu.setObjectName("cards_menu")

        self.btn_main_menu = QtWidgets.QPushButton(self.cardsVLayout)
        self.btn_main_menu.clicked.connect(lambda: self.mainWidget.setCurrentIndex(0))
        self.btn_main_menu.setObjectName("btn_main_menu")
        self.cards_menu.addWidget(self.btn_main_menu)

        self.btn_settings_cards = QtWidgets.QPushButton(self.cardsVLayout)
        self.btn_settings_cards.setObjectName("btn_settings_cards")
        self.btn_settings_cards.clicked.connect(self.open_settings)
        self.cards_menu.addWidget(self.btn_settings_cards)

        self.cardsContentLayout.addLayout(self.cards_menu)
        self.mainWidget.addWidget(self.cardsPage)

        # Decks Page
        self.decksPage = QtWidgets.QWidget()
        self.decksPage.setSizePolicy(sizePolicy)
        self.decksPage.setObjectName("decks_page")
        self.decksVLayout = QtWidgets.QWidget(self.decksPage)

        self.decksVLayout.setGeometry(QtCore.QRect(0, 0, 460, 600))
        self.decksVLayout.setObjectName("decks_vlayout")

        self.decksContentLayout = QtWidgets.QVBoxLayout(self.decksVLayout)
        self.decksContentLayout.setContentsMargins(0, 0, 0, 0)
        self.decksContentLayout.setObjectName("decks_content_layout")

        self.decksScrollArea = QtWidgets.QScrollArea(self.decksVLayout)
        self.decksScrollArea.setWidgetResizable(True)
        self.decksScrollArea.setObjectName("decks_scroll_area")

        self.decksContent = QtWidgets.QWidget()
        self.decksContent.setGeometry(QtCore.QRect(0, 0, 460, 600))
        self.decksContent.setObjectName("decks_contents")
        self.decksScrollArea.setWidget(self.decksContent)

        self.cardsScrollArea.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.cardsScrollArea.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.decksContentLayout.addWidget(self.decksScrollArea)

        self.btn_add_decks = QtWidgets.QPushButton(self.decksVLayout)
        self.btn_add_decks.setObjectName("btn_add_decks")
        self.btn_add_decks.clicked.connect(self.add_deck)
        self.decksContentLayout.addWidget(self.btn_add_decks)

        self.decks_menu = QtWidgets.QHBoxLayout()
        self.decks_menu.setObjectName("decks_menu")

        self.btn_decks_main_menu = QtWidgets.QPushButton(self.decksVLayout)
        self.btn_decks_main_menu.clicked.connect(lambda: self.mainWidget.setCurrentIndex(0))
        self.btn_decks_main_menu.setObjectName("btn_decks_main_menu")
        self.decks_menu.addWidget(self.btn_decks_main_menu)

        self.btn_settings_decks = QtWidgets.QPushButton(self.decksVLayout)
        self.btn_settings_decks.setObjectName("btn_settings_decks")
        self.btn_settings_decks.clicked.connect(self.open_settings)
        self.decks_menu.addWidget(self.btn_settings_decks)

        self.decksContentLayout.addLayout(self.decks_menu)

        self.mainWidget.addWidget(self.decksPage)

        # Learn Page
        self.learnPage = QtWidgets.QWidget()
        self.learnPage.setObjectName("learn_page")
        self.contentVLayout = QtWidgets.QWidget(self.learnPage)

        self.contentVLayout.setGeometry(QtCore.QRect(0, 0, 460, 600))
        self.contentVLayout.setObjectName("content_layout")
        self.learn_content_vbox = QtWidgets.QVBoxLayout(self.contentVLayout)

        self.learn_content_vbox.setContentsMargins(0, 0, 0, 0)
        self.learn_content_vbox.setObjectName("verticalLayout_1")

        self.menu_box = QtWidgets.QVBoxLayout()
        self.menu_box.setObjectName("menu_box")

        self.learn_menu_top = QtWidgets.QHBoxLayout()
        self.learn_menu_top.setObjectName("learn_menu")

        self.btn_back = QtWidgets.QPushButton(self.contentVLayout)
        self.btn_back.setObjectName("btn_back")
        self.btn_back.clicked.connect(self.back)
        self.learn_menu_top.addWidget(self.btn_back)

        self.btn_check = QtWidgets.QPushButton(self.contentVLayout)
        self.btn_check.setObjectName("btn_check")
        self.btn_check.clicked.connect(self.checked)
        self.learn_menu_top.addWidget(self.btn_check)

        self.btn_failed = QtWidgets.QPushButton(self.contentVLayout)
        self.btn_failed.setObjectName("btn_failed")
        self.btn_failed.clicked.connect(self.failed)
        self.learn_menu_top.addWidget(self.btn_failed)

        self.btn_next = QtWidgets.QPushButton(self.contentVLayout)
        self.btn_next.setObjectName("btn_next")
        self.btn_next.clicked.connect(self.forward)
        self.learn_menu_top.addWidget(self.btn_next)

        self.menu_box.addLayout(self.learn_menu_top)

        self.learn_menu_bottom = QtWidgets.QHBoxLayout()
        self.learn_menu_bottom.setObjectName("learn_menu_bottom")

        self.btn_learn_main_menu = QtWidgets.QPushButton(self.contentVLayout)
        self.btn_learn_main_menu.clicked.connect(lambda: self.mainWidget.setCurrentIndex(0))
        self.btn_learn_main_menu.setObjectName("btn_learn_main_menu")
        self.learn_menu_bottom.addWidget(self.btn_learn_main_menu)

        self.btn_learn_settings = QtWidgets.QPushButton(self.contentVLayout)
        self.btn_learn_settings.setObjectName("btn_learn_settings")
        self.btn_learn_settings.clicked.connect(self.open_settings)
        self.learn_menu_bottom.addWidget(self.btn_learn_settings)

        self.menu_box.addLayout(self.learn_menu_bottom)
        self.learn_content_vbox.addLayout(self.menu_box)

        self.mainWidget.addWidget(self.learnPage)
        main_window.setCentralWidget(self.centralwidget)

        # Menu bar
        self.menubar = QtWidgets.QMenuBar(main_window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 480, 21))
        self.menubar.setObjectName("menubar")
        main_window.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(main_window)
        self.statusbar.setObjectName("statusbar")
        main_window.setStatusBar(self.statusbar)

        self.re_translate_ui(main_window)
        self.mainWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(main_window)

    def re_translate_ui(self, main_window):
        _translate = QtCore.QCoreApplication.translate
        main_window.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.btn_cards.setText(_translate("MainWindow", "Karten"))
        self.btn_decks.setText(_translate("MainWindow", "Decks"))
        self.btn_learn.setText(_translate("MainWindow", "Lernen"))
        self.btn_start_settings.setText(_translate("MainWindow", "Einstellungen"))
        self.btn_add_card.setText(_translate("MainWindow", "+"))
        self.btn_main_menu.setText(_translate("MainWindow", "Startseite"))
        self.btn_settings_cards.setText(_translate("MainWindow", "Einstellungen"))
        self.btn_add_decks.setText(_translate("MainWindow", "+"))
        self.btn_decks_main_menu.setText(_translate("MainWindow", "Startseite"))
        self.btn_settings_decks.setText(_translate("MainWindow", "Einstellungen"))
        self.btn_back.setText(_translate("MainWindow", "‚Üê"))
        self.btn_check.setText(_translate("MainWindow", "‚úî"))
        self.btn_failed.setText(_translate("MainWindow", "‚úò"))
        self.btn_next.setText(_translate("MainWindow", "‚Üí"))
        self.btn_learn_main_menu.setText(_translate("MainWindow", "Startseite"))
        self.btn_learn_settings.setText(_translate("MainWindow", "Einstellungen"))

    def open_settings(self):
        print("Work in Progress")

    def open_cards(self):
        self.mainWidget.setCurrentIndex(1)
        cards = self.controller.get_cards()
        vbox = QtWidgets.QVBoxLayout()

        for card in cards:
            card.setFixedHeight(80)
            card.setFixedWidth(425)
            vbox.addWidget(card)

        self.cardsContent.setLayout(vbox)

    def add_card(self):
        # print(f"{self.controller.get_cards()}\n")
        front, ok = QInputDialog.getText(self.mainWidget, "Neue Karte erstellen", "Vorderseite: ")
        # print(front)
        if ok:
            back, ok = QInputDialog.getText(self.mainWidget, "Neue Karte erstellen", "R√ºckseite: ")
            # print(back)
            if ok:
                new_card = self.controller.add_card(front, back)
                new_card.setFixedHeight(80)
                new_card.setFixedWidth(425)
                # print(f"front {front}, back {back}, card: {new_card}")
                self.cardsContent.layout().addWidget(new_card)
                self.cardsContent.update()

    def open_decks(self):
        self.mainWidget.setCurrentIndex(2)
        decks = self.controller.get_decks()
        vbox = QtWidgets.QVBoxLayout()

        for deck in decks:
            # print(deck)
            vbox.addWidget(deck)

        self.decksContent.setLayout(vbox)

    def add_deck(self):
        # TODO: get name and subject from form dialog
        name, ok = QInputDialog().getText(self.mainWidget, "Neues Deck erstellen", "Name: ")
        if ok:
            subject, ok = QInputDialog().getText(self.mainWidget, "Neues Deck erstellen", "Fach: ")
            if ok:
                new_deck = self.controller.add_deck(name, subject)
                self.decksContent.layout().addWidget(new_deck)
                self.decksContent.update()

    def add_card_to_deck(self):
        pass

    def open_learn(self):
        SelectionDialog(self.controller.get_decks(), self.controller)
        try:
            self.controller.selected_card = self.controller.selected_deck.cards[0]
            self.current_card: Card = self.controller.get_next_card(0)
            self.current_card.clicked.connect(self.swap_text)
            self.current_card.setFixedSize(460, 500)
            self.learn_content_vbox.insertWidget(0, self.current_card)
            self.mainWidget.setCurrentIndex(3)
            print(self.current_card)

        except AttributeError:
            self.mainWidget.setCurrentIndex(0)

    def back(self):
        self.learn_content_vbox.removeWidget(self.current_card)
        self.current_card = self.controller.get_next_card(-1)
        self.learn_content_vbox.insertWidget(0, self.current_card)
        self.current_card.setFixedSize(460, 500)
        self.current_card.clicked.connect(self.swap_text)
        print(self.current_card)

    def forward(self):
        self.learn_content_vbox.removeWidget(self.current_card)
        self.current_card = self.controller.get_next_card(1)
        self.learn_content_vbox.insertWidget(0, self.current_card)
        self.current_card.setFixedSize(460, 500)
        self.current_card.clicked.connect(self.swap_text)
        print(self.current_card)

    def checked(self):
        self.current_card.counter_r += 1
        self.controller.increment_r(self.current_card)
        self.learn_content_vbox.removeWidget(self.current_card)
        self.current_card = self.controller.get_next_card(1)
        self.learn_content_vbox.insertWidget(0, self.current_card)
        self.current_card.setFixedSize(460, 500)
        self.current_card.clicked.connect(self.swap_text)
        print(self.current_card)

    def failed(self):
        self.current_card.counter_w += 1
        self.controller.increment_w(self.current_card)
        self.learn_content_vbox.removeWidget(self.current_card)
        self.current_card = self.controller.get_next_card(1)
        self.learn_content_vbox.insertWidget(0, self.current_card)
        self.current_card.setFixedSize(460, 500)
        self.current_card.clicked.connect(self.swap_text)
        print(self.current_card)

    def swap_text(self):
        if self.current_card.is_front:
            self.current_card.setText(self.current_card.back)
            self.current_card.is_front = False
        else:
            self.current_card.setText(self.current_card.front)
            self.current_card.is_front = True
